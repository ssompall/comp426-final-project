{"ast":null,"code":"import { UIActions } from \"./notifications-slice\";\nimport { authActions } from \"./authenticate-slice\";\nimport { recipesActions } from \"./recipes-slice\";\nconst putHttpRequest = async (dispatch, auth, url, method) => {\n  try {\n    auth.hideModal();\n    console.log(\"pending\");\n    dispatch(UIActions.showNotification({\n      status: \"pending\",\n      title: \"authenticating...\",\n      message: \"authenticating account\"\n    }));\n    const response = await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: auth.email,\n        password: auth.password,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error();\n    }\n    console.log(\"success\");\n    const data = await response.json();\n    dispatch(authActions.login({\n      response: data\n    }));\n    if (method === \"login\") {\n      //fetch fav url\n      url = `https://foody-recipefinder-default-rtdb.asia-southeast1.firebasedatabase.app/users/${data.localId}.json`;\n      const favResponse = await fetch(url);\n      if (!favResponse.ok) {\n        throw new Error();\n      }\n      const favData = await favResponse.json();\n      const favUrl = [];\n      if (favData) {\n        for (const key in favData) {\n          favUrl.push(favData[key].recipeData.recipe.url);\n        }\n      }\n      dispatch(recipesActions.fetchFavUrl({\n        url: favUrl\n      }));\n    }\n    dispatch(UIActions.showNotification({\n      status: \"success\",\n      title: \"authenticated\",\n      message: \"user has been authenticated Successfully!\"\n    }));\n  } catch (error) {\n    console.log(error);\n    dispatch(UIActions.showNotification({\n      status: \"error\",\n      title: \"Error!\",\n      message: \"user authentication failed!\"\n    }));\n  }\n  setTimeout(() => {\n    dispatch(UIActions.hideNotification());\n  }, 2000);\n};\nexport const signUp = auth => {\n  return dispatch => {\n    const url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDR7Fb1LEDNVj0SNh-qw3meCBPgJQF9_gw\";\n    putHttpRequest(dispatch, auth, url, \"signup\");\n  };\n};\nexport const login = auth => {\n  return dispatch => {\n    const url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDR7Fb1LEDNVj0SNh-qw3meCBPgJQF9_gw\";\n    putHttpRequest(dispatch, auth, url, \"login\");\n  };\n};","map":{"version":3,"names":["UIActions","authActions","recipesActions","putHttpRequest","dispatch","auth","url","method","hideModal","console","log","showNotification","status","title","message","response","fetch","body","JSON","stringify","email","password","returnSecureToken","headers","ok","Error","data","json","login","localId","favResponse","favData","favUrl","key","push","recipeData","recipe","fetchFavUrl","error","setTimeout","hideNotification","signUp"],"sources":["/Users/snigdhasompalli/Library/CloudStorage/OneDrive-UniversityofNorthCarolinaatChapelHill/School/Year4-SP24/COMP 426/comp426-final-project/src/store/authenticate-action.js"],"sourcesContent":["import { UIActions } from \"./notifications-slice\";\r\nimport { authActions } from \"./authenticate-slice\";\r\nimport { recipesActions } from \"./recipes-slice\";\r\n\r\nconst putHttpRequest = async (dispatch, auth, url, method) => {\r\n  try {\r\n    auth.hideModal();\r\n    console.log(\"pending\");\r\n    dispatch(\r\n\r\n      UIActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"authenticating...\",\r\n        message: \"authenticating account\",\r\n      })\r\n    );\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email: auth.email,\r\n        password: auth.password,\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error();\r\n    }\r\n\r\n    console.log(\"success\");\r\n    const data = await response.json();\r\n    dispatch(authActions.login({ response: data }));\r\n    if (method === \"login\") {\r\n      //fetch fav url\r\n      url = `https://foody-recipefinder-default-rtdb.asia-southeast1.firebasedatabase.app/users/${data.localId}.json`;\r\n      const favResponse = await fetch(url);\r\n      if (!favResponse.ok) {\r\n        throw new Error();\r\n      }\r\n      const favData = await favResponse.json();\r\n      const favUrl = [];\r\n      if (favData) {\r\n        for (const key in favData) {\r\n          favUrl.push(favData[key].recipeData.recipe.url);\r\n        }\r\n      }\r\n      dispatch(recipesActions.fetchFavUrl({ url: favUrl }));\r\n    }\r\n    dispatch(\r\n      UIActions.showNotification({\r\n        status: \"success\",\r\n        title: \"authenticated\",\r\n        message: \"user has been authenticated Successfully!\",\r\n      })\r\n    );\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch(\r\n      UIActions.showNotification({\r\n        status: \"error\",\r\n        title: \"Error!\",\r\n        message: \"user authentication failed!\",\r\n      })\r\n    );\r\n  }\r\n  setTimeout(() => {\r\n    dispatch(UIActions.hideNotification());\r\n  }, 2000);\r\n};\r\n\r\nexport const signUp = (auth) => {\r\n  return (dispatch) => {\r\n    const url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDR7Fb1LEDNVj0SNh-qw3meCBPgJQF9_gw\";\r\n    putHttpRequest(dispatch, auth, url, \"signup\");\r\n  };\r\n};\r\n\r\nexport const login = (auth) => {\r\n  return (dispatch) => {\r\n    const url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDR7Fb1LEDNVj0SNh-qw3meCBPgJQF9_gw\";\r\n    putHttpRequest(dispatch, auth, url, \"login\");\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}