{"ast":null,"code":"import { recipesActions } from \"./recipes-slice\";\nimport { UIActions } from \"./notifications-slice\";\nexport const fetchRecipes = actions => {\n  return async dispatch => {\n    try {\n      console.log(\"fetching...\");\n      dispatch(UIActions.showNotification({\n        status: \"pending\",\n        title: \"fetching...\",\n        message: \"Fetching Recipes!\"\n      }));\n      let url;\n      if (actions.method === \"apiFetch\") {\n        const appKey = \"f3dcccf3cc8bbc757ed4d5552678b2ce\";\n        const appId = \"14c250f0\";\n        //fetching recipes from API\n        if (actions.searchKeyword.trim().length === 0) {\n          throw new Error();\n        }\n        url = `https://api.edamam.com/search?q=${actions.searchKeyword}&app_id=${appId}&app_key=${appKey}`;\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error();\n        }\n        const data = await response.json();\n        if (data.hits.length === 0) {\n          dispatch(recipesActions.fetchRecipes({\n            recipes: data.hits,\n            isFavFetched: false,\n            msg: \"No Recipe Found, try another search \"\n          }));\n        } else {\n          dispatch(recipesActions.fetchRecipes({\n            recipes: data.hits,\n            isFavFetched: false\n          }));\n          //fetching fav data\n          url = `https://foody-recipefinder-default-rtdb.asia-southeast1.firebasedatabase.app/users/${actions.UID}.json`;\n          const favResponse = await fetch(url);\n          if (!favResponse.ok) {\n            throw new Error();\n          }\n          const favData = await favResponse.json();\n          const favUrl = [];\n          const favKeys = {};\n          if (favData) {\n            for (const key in favData) {\n              favUrl.push(favData[key].recipeData.recipe.url);\n              const url = favData[key].recipeData.recipe.url;\n              favKeys[url] = key;\n            }\n          }\n          dispatch(recipesActions.fetchFavUrl({\n            url: favUrl,\n            favKeys\n          }));\n        }\n        //fetching favurl and favkeys\n      } else if (actions.method === \"favFetch\") {\n        url = `https://foody-recipefinder-default-rtdb.asia-southeast1.firebasedatabase.app/users/${actions.UID}.json`;\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error();\n        }\n        const data = await response.json();\n        const favRecipes = [];\n        const favKeys = {};\n        if (!data) {\n          dispatch(recipesActions.fetchRecipes({\n            recipes: favRecipes,\n            favKeys,\n            isFavFetched: true,\n            msg: \"No favourites Found!\"\n          }));\n        } else {\n          for (const key in data) {\n            favRecipes.push(data[key].recipeData);\n            const url = data[key].recipeData.recipe.url;\n            favKeys[url] = key;\n          }\n          dispatch(recipesActions.fetchRecipes({\n            recipes: favRecipes,\n            favKeys,\n            isFavFetched: true,\n            msg: \"Search and add your favourite recipes\"\n          }));\n        }\n      }\n      console.log(\"success\");\n      dispatch(UIActions.showNotification({\n        status: \"success\",\n        title: \"Fetched\",\n        message: \"Recipes have been fetched Successfully!\"\n      }));\n    } catch (error) {\n      console.log(error);\n      dispatch(UIActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Recipes fetching failed!\"\n      }));\n    }\n    setTimeout(() => {\n      dispatch(UIActions.hideNotification());\n    }, 2000);\n  };\n};\nexport const storeFavRecipe = actions => {\n  return async dispatch => {\n    try {\n      console.log(\"storing...\");\n      dispatch(UIActions.showNotification({\n        status: \"pending\",\n        title: \"storing...\",\n        message: \"storing Recipe!\"\n      }));\n      const recipeData = {\n        recipe: {\n          image: actions.recipeData.recipe.image,\n          label: actions.recipeData.recipe.label,\n          url: actions.recipeData.recipe.url,\n          ingredients: actions.recipeData.recipe.ingredients\n        }\n      };\n      const response = await fetch(`https://foody-recipefinder-default-rtdb.asia-southeast1.firebasedatabase.app/users/${actions.UID}.json`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          recipeData\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error();\n      }\n      const favResponse = await fetch(`https://foody-recipefinder-default-rtdb.asia-southeast1.firebasedatabase.app/users/${actions.UID}.json`);\n      if (!favResponse.ok) {\n        throw new Error();\n      }\n      const favData = await favResponse.json();\n      const favUrl = [];\n      const favKeys = {};\n      if (favData) {\n        for (const key in favData) {\n          favUrl.push(favData[key].recipeData.recipe.url);\n          const url = favData[key].recipeData.recipe.url;\n          favKeys[url] = key;\n        }\n      }\n      dispatch(recipesActions.fetchFavUrl({\n        url: favUrl,\n        favKeys\n      }));\n      console.log(\"success\");\n      dispatch(UIActions.showNotification({\n        status: \"success\",\n        title: \"stored\",\n        message: \"Recipe has been stored Successfully!\"\n      }));\n    } catch (error) {\n      console.log(\"error\");\n      dispatch(UIActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Recipe storing failed!\"\n      }));\n    }\n    setTimeout(() => {\n      dispatch(UIActions.hideNotification());\n    }, 2000);\n  };\n};\nexport const unFavourite = actions => {\n  return async dispatch => {\n    //deleting fav recipe\n    try {\n      console.log(\"Removing...\");\n      dispatch(\n      //creating\n      UIActions.showNotification({\n        status: \"pending\",\n        title: \"Removing...\",\n        message: \"Removing Recipe from favourites!\"\n      }));\n      const response = await fetch(`https://foody-recipefinder-default-rtdb.asia-southeast1.firebasedatabase.app/users/${actions.UID}/${actions.key}.json`, {\n        method: \"delete\"\n      });\n      if (!response.ok) {\n        throw new Error();\n      }\n      dispatch(recipesActions.deleteFavRecipes({\n        url: actions.url\n      }));\n      console.log(\"success\");\n      dispatch(UIActions.showNotification({\n        status: \"success\",\n        title: \"Fetched\",\n        message: \"Recipe has been removed from favourites!\"\n      }));\n    } catch (error) {\n      console.log(error);\n      dispatch(UIActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Recipe removing has been failed!\"\n      }));\n    }\n    setTimeout(() => {\n      dispatch(UIActions.hideNotification());\n    }, 2000);\n  };\n};","map":{"version":3,"names":["recipesActions","UIActions","fetchRecipes","actions","dispatch","console","log","showNotification","status","title","message","url","method","appKey","appId","searchKeyword","trim","length","Error","response","fetch","ok","data","json","hits","recipes","isFavFetched","msg","UID","favResponse","favData","favUrl","favKeys","key","push","recipeData","recipe","fetchFavUrl","favRecipes","error","setTimeout","hideNotification","storeFavRecipe","image","label","ingredients","body","JSON","stringify","headers","unFavourite","deleteFavRecipes"],"sources":["/Users/snigdhasompalli/Library/CloudStorage/OneDrive-UniversityofNorthCarolinaatChapelHill/School/Year4-SP24/COMP 426/comp426-final-project/src/store/recipes-action.js"],"sourcesContent":["import { recipesActions } from \"./recipes-slice\";\r\nimport { UIActions } from \"./notifications-slice\";\r\n\r\nexport const fetchRecipes = (actions) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log(\"fetching...\");\r\n      dispatch(\r\n\r\n        UIActions.showNotification({\r\n          status: \"pending\",\r\n          title: \"fetching...\",\r\n          message: \"Fetching Recipes!\",\r\n        })\r\n      );\r\n      let url;\r\n      if (actions.method === \"apiFetch\") {\r\n        const appKey = \"f3dcccf3cc8bbc757ed4d5552678b2ce\";\r\n        const appId = \"14c250f0\";\r\n        //fetching recipes from API\r\n        if (actions.searchKeyword.trim().length === 0) {\r\n          throw new Error();\r\n        }\r\n        url = `https://api.edamam.com/search?q=${actions.searchKeyword}&app_id=${appId}&app_key=${appKey}`;\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n          throw new Error();\r\n        }\r\n        const data = await response.json();\r\n\r\n        if (data.hits.length === 0) {\r\n          dispatch(\r\n            recipesActions.fetchRecipes({\r\n              recipes: data.hits,\r\n              isFavFetched: false,\r\n              msg: \"No Recipe Found, try another search \",\r\n            })\r\n          );\r\n        } else {\r\n          dispatch(\r\n            recipesActions.fetchRecipes({\r\n              recipes: data.hits,\r\n              isFavFetched: false,\r\n            })\r\n          );\r\n          //fetching fav data\r\n          url = `https://foody-recipefinder-default-rtdb.asia-southeast1.firebasedatabase.app/users/${actions.UID}.json`;\r\n          const favResponse = await fetch(url);\r\n          if (!favResponse.ok) {\r\n            throw new Error();\r\n          }\r\n          const favData = await favResponse.json();\r\n          const favUrl = [];\r\n          const favKeys = {};\r\n          if (favData) {\r\n            for (const key in favData) {\r\n              favUrl.push(favData[key].recipeData.recipe.url);\r\n              const url = favData[key].recipeData.recipe.url;\r\n              favKeys[url] = key;\r\n            }\r\n          }\r\n          dispatch(recipesActions.fetchFavUrl({ url: favUrl, favKeys }));\r\n        }\r\n        //fetching favurl and favkeys\r\n      } else if (actions.method === \"favFetch\") {\r\n        url = `https://foody-recipefinder-default-rtdb.asia-southeast1.firebasedatabase.app/users/${actions.UID}.json`;\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n          throw new Error();\r\n        }\r\n        const data = await response.json();\r\n        const favRecipes = [];\r\n        const favKeys = {};\r\n        if (!data) {\r\n          dispatch(\r\n            recipesActions.fetchRecipes({\r\n              recipes: favRecipes,\r\n              favKeys,\r\n              isFavFetched: true,\r\n              msg: \"No favourites Found!\",\r\n            })\r\n          );\r\n        } else {\r\n          for (const key in data) {\r\n            favRecipes.push(data[key].recipeData);\r\n            const url = data[key].recipeData.recipe.url;\r\n            favKeys[url] = key;\r\n          }\r\n          dispatch(\r\n            recipesActions.fetchRecipes({\r\n              recipes: favRecipes,\r\n              favKeys,\r\n              isFavFetched: true,\r\n              msg: \"Search and add your favourite recipes\",\r\n            })\r\n          );\r\n        }\r\n      }\r\n      console.log(\"success\");\r\n      dispatch(\r\n        UIActions.showNotification({\r\n          status: \"success\",\r\n          title: \"Fetched\",\r\n          message: \"Recipes have been fetched Successfully!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(\r\n        UIActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: \"Recipes fetching failed!\",\r\n        })\r\n      );\r\n    }\r\n    setTimeout(() => {\r\n      dispatch(UIActions.hideNotification());\r\n    }, 2000);\r\n  };\r\n};\r\n\r\nexport const storeFavRecipe = (actions) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log(\"storing...\");\r\n      dispatch(\r\n\r\n        UIActions.showNotification({\r\n          status: \"pending\",\r\n          title: \"storing...\",\r\n          message: \"storing Recipe!\",\r\n        })\r\n      );\r\n      const recipeData = {\r\n        recipe: {\r\n          image: actions.recipeData.recipe.image,\r\n          label: actions.recipeData.recipe.label,\r\n          url: actions.recipeData.recipe.url,\r\n          ingredients: actions.recipeData.recipe.ingredients,\r\n        },\r\n      };\r\n      const response = await fetch(\r\n        `https://foody-recipefinder-default-rtdb.asia-southeast1.firebasedatabase.app/users/${actions.UID}.json`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            recipeData,\r\n          }),\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error();\r\n      }\r\n\r\n      const favResponse = await fetch(\r\n        `https://foody-recipefinder-default-rtdb.asia-southeast1.firebasedatabase.app/users/${actions.UID}.json`\r\n      );\r\n      if (!favResponse.ok) {\r\n        throw new Error();\r\n      }\r\n      const favData = await favResponse.json();\r\n      const favUrl = [];\r\n      const favKeys = {};\r\n      if (favData) {\r\n        for (const key in favData) {\r\n          favUrl.push(favData[key].recipeData.recipe.url);\r\n          const url = favData[key].recipeData.recipe.url;\r\n          favKeys[url] = key;\r\n        }\r\n      }\r\n      dispatch(\r\n        recipesActions.fetchFavUrl({\r\n          url: favUrl,\r\n          favKeys,\r\n        })\r\n      );\r\n      console.log(\"success\");\r\n      dispatch(\r\n        UIActions.showNotification({\r\n          status: \"success\",\r\n          title: \"stored\",\r\n          message: \"Recipe has been stored Successfully!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error\");\r\n      dispatch(\r\n        UIActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: \"Recipe storing failed!\",\r\n        })\r\n      );\r\n    }\r\n    setTimeout(() => {\r\n      dispatch(UIActions.hideNotification());\r\n    }, 2000);\r\n  };\r\n};\r\n\r\nexport const unFavourite = (actions) => {\r\n  return async (dispatch) => {\r\n    //deleting fav recipe\r\n    try {\r\n      console.log(\"Removing...\");\r\n      dispatch(\r\n        //creating\r\n        UIActions.showNotification({\r\n          status: \"pending\",\r\n          title: \"Removing...\",\r\n          message: \"Removing Recipe from favourites!\",\r\n        })\r\n      );\r\n      const response = await fetch(\r\n        `https://foody-recipefinder-default-rtdb.asia-southeast1.firebasedatabase.app/users/${actions.UID}/${actions.key}.json`,\r\n        { method: \"delete\" }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error();\r\n      }\r\n      dispatch(\r\n        recipesActions.deleteFavRecipes({\r\n          url: actions.url,\r\n        })\r\n      );\r\n      console.log(\"success\");\r\n      dispatch(\r\n        UIActions.showNotification({\r\n          status: \"success\",\r\n          title: \"Fetched\",\r\n          message: \"Recipe has been removed from favourites!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(\r\n        UIActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error!\",\r\n          message: \"Recipe removing has been failed!\",\r\n        })\r\n      );\r\n    }\r\n    setTimeout(() => {\r\n      dispatch(UIActions.hideNotification());\r\n    }, 2000);\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}